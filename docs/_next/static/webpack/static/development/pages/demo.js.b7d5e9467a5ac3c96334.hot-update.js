webpackHotUpdate("static/development/pages/demo.js",{

/***/ "../flowjv-react/dist/bindings/form/index.js":
/*!***************************************************!*\
  !*** ../flowjv-react/dist/bindings/form/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setupFlowJV = exports.formContext = void 0;\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"../../node_modules/react/index.js\"));\nvar flowjv_1 = __webpack_require__(/*! flowjv */ \"../flowjv/dist/index.js\");\nvar utils_1 = __webpack_require__(/*! ./utils */ \"../flowjv-react/dist/bindings/form/utils.js\");\nvar flowjv_2 = __webpack_require__(/*! flowjv */ \"../flowjv/dist/index.js\");\nvar classnames_1 = __importDefault(__webpack_require__(/*! classnames */ \"../../node_modules/classnames/index.js\"));\nvar debounce_1 = __importDefault(__webpack_require__(/*! lodash/debounce */ \"../../node_modules/lodash/debounce.js\"));\nexports.formContext = react_1.default.createContext({});\nexports.setupFlowJV = function (Config) {\n    return /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1(props) {\n            var _this = _super.call(this, props) || this;\n            _this.refSet = new Set();\n            _this.getValue = function (key) {\n                if (key === void 0) { key = \"\"; }\n                if (_this.props.value) {\n                    return utils_1.gett(_this.props.value, key);\n                }\n                return utils_1.gett(_this.state.value, key);\n            };\n            _this.setValue = function (key, value) {\n                if (_this.props.value) {\n                    var newvalue_1 = utils_1.sett(_this.props.value, key, value);\n                    _this.validate(newvalue_1, function () {\n                        var _a, _b;\n                        (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                            value: newvalue_1,\n                            isValid: _this.state.isValid,\n                        });\n                    });\n                }\n                else {\n                    var newvalue_2 = utils_1.sett(_this.state.value, key, value);\n                    _this.setState({\n                        value: newvalue_2,\n                    });\n                    _this.validate(_this.state.value, function () { var _a, _b; return (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        value: newvalue_2,\n                        isValid: _this.state.isValid,\n                    }); });\n                }\n            };\n            _this.unsetValue = function (key) { return function () {\n                var _a, _b;\n                if (_this.props.value) {\n                    (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        value: utils_1.unsett(_this.props.value, key),\n                        isValid: _this.state.isValid,\n                    });\n                }\n                else {\n                    _this.setState({\n                        value: utils_1.unsett(_this.state.value, key),\n                    });\n                }\n            }; };\n            _this.setTouch = function (refPath) {\n                _this.refSet.add(refPath);\n                return function () {\n                    if (!_this.state.touchMap[refPath]) {\n                        _this.setState(function (state) {\n                            var _a;\n                            return ({\n                                touchMap: __assign(__assign({}, state.touchMap), (_a = {}, _a[refPath] = true, _a)),\n                            });\n                        });\n                        _this.validate(_this.props.value ? _this.props.value : _this.state.value);\n                    }\n                };\n            };\n            _this.touchAll = function () {\n                _this.setState({\n                    touchMap: Array.from(_this.refSet).reduce(function (agg, v) {\n                        var _a;\n                        return (__assign(__assign({}, agg), (_a = {}, _a[v] = true, _a)));\n                    }, {}),\n                });\n            };\n            _this.validate = function (value, func) {\n                var result = flowjv_1.validateJSONFlow(_this.props.schema, {\n                    context: _this.props.context,\n                    data: value,\n                    options: { aggressive: true, enforceSchema: true },\n                });\n                if (!result.isValid) {\n                    var errorMap = result.errors.reduce(function (agg, v) {\n                        var _a;\n                        return (__assign(__assign({}, agg), (_a = {}, _a[v.refPath.join(\".\")] = v.msgs, _a)));\n                    }, {});\n                    _this.setState({\n                        isValid: false,\n                        errorMap: errorMap,\n                    }, func);\n                }\n                else {\n                    _this.setState({\n                        isValid: true,\n                        errorMap: {},\n                    }, func);\n                }\n            };\n            _this.getContext = function () {\n                return {\n                    data: _this.getValue(),\n                    context: _this.props.context,\n                    schema: _this.props.schema,\n                };\n            };\n            _this.getRefPathValue = function (refPath) {\n                var value;\n                if (_this.props.value) {\n                    value = utils_1.gett(_this.props.value, refPath);\n                }\n                else {\n                    value = utils_1.gett(_this.state.value, refPath);\n                }\n                var isTouched = _this.state.touchMap[refPath];\n                var errors = _this.state.errorMap[refPath] || [];\n                return {\n                    value: value,\n                    errors: isTouched ? errors : [],\n                    success: isTouched ? errors.length === 0 : false,\n                };\n            };\n            _this.renderAtom = function (ref) {\n                var refPath = ref.join(\".\");\n                var schema = flowjv_2.lookup.atom(_this.props.schema, ref);\n                if (schema === null)\n                    return null;\n                var _a = _this.getRefPathValue(refPath), errors = _a.errors, success = _a.success, value = _a.value;\n                return (react_1.default.createElement(Config, { key: refPath, schema: schema, ui: {\n                        className: \"pt-3\",\n                        label: schema.label,\n                        errors: errors,\n                        success: success,\n                        value: value,\n                        onChange: function (v) {\n                            if (schema.type === \"number\")\n                                v = +v;\n                            _this.setValue(refPath, v);\n                        },\n                        setTouch: _this.setTouch(refPath),\n                    } }));\n            };\n            _this.renderBlockBySchema = function (schema, ref) {\n                var refPath = ref.join(\".\");\n                switch (schema.type) {\n                    case \"if\": {\n                        var cond = !!flowjv_1.execJSONExpression(schema.cond, {\n                            data: _this.getValue(),\n                            context: _this.props.context,\n                            ref: _this.getValue(refPath),\n                        });\n                        var flow = cond ? schema.true : schema.false;\n                        return (react_1.default.createElement(Config, { key: refPath + \"$if\", schema: { type: \"conditionWrapper\", animKey: \"if\" }, ui: {\n                                errors: [],\n                                success: false,\n                            } }, flow &&\n                            _this.renderFlow({\n                                type: \"object\",\n                                properties: flow,\n                            }, ref)));\n                    }\n                    case \"switch\": {\n                        var cond = flowjv_1.execJSONExpression(schema.cond, {\n                            data: _this.getValue(),\n                            context: _this.props.context,\n                            ref: _this.getValue(ref.join(\".\")),\n                        });\n                        var flow = schema.cases[cond];\n                        return (react_1.default.createElement(Config, { key: refPath + \".$case\", schema: { type: \"conditionWrapper\", animKey: cond }, ui: {\n                                errors: [],\n                                success: false,\n                            } }, flow &&\n                            _this.renderFlow({ type: \"object\", properties: flow }, ref)));\n                    }\n                }\n                return null;\n            };\n            _this.renderBlockById = function (blockId) {\n                var _a = flowjv_2.lookup.block(_this.props.schema, blockId), block = _a.block, ref = _a.ref;\n                if (!block) {\n                    return null;\n                }\n                return _this.renderBlockBySchema(block, ref);\n            };\n            _this.renderFlow = function (schema, ref) {\n                var _a;\n                switch (schema.type) {\n                    case \"object\": {\n                        // Loop over all the elements.\n                        return schema.properties.map(function (objconfig) {\n                            switch (objconfig.type) {\n                                case \"if\":\n                                case \"switch\": {\n                                    return _this.renderBlockBySchema(objconfig, ref);\n                                }\n                                default: {\n                                    return _this.renderFlow(objconfig, __spreadArrays(ref, [\n                                        objconfig.key,\n                                    ]));\n                                }\n                            }\n                        });\n                    }\n                }\n                var refPath = ref.join(\".\");\n                switch (schema.type) {\n                    case \"enum\":\n                    case \"boolean\":\n                    case \"number\":\n                    case \"string\": {\n                        var render = (_a = _this.props.renderMap) === null || _a === void 0 ? void 0 : _a[refPath];\n                        if (render) {\n                            var _b = _this.getRefPathValue(refPath), errors = _b.errors, success = _b.success, value = _b.value;\n                            return render({\n                                errors: errors,\n                                success: success,\n                                value: value,\n                                onChange: function (v) { return _this.setValue(refPath, v); },\n                                setTouch: function () { return _this.setTouch(refPath); },\n                            });\n                        }\n                        return _this.renderAtom(ref);\n                    }\n                }\n            };\n            _this.state = {\n                value: _this.props.defaultValue,\n                isValid: false,\n                touchMap: {},\n                errorMap: {},\n            };\n            _this.validate = debounce_1.default(_this.validate, 300);\n            return _this;\n        }\n        class_1.prototype.componentDidMount = function () {\n            var _this = this;\n            this.validate(this.getValue(), function () {\n                var _a, _b;\n                (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                    value: _this.getValue(),\n                    isValid: _this.state.isValid,\n                });\n            });\n        };\n        class_1.prototype.render = function () {\n            var _this = this;\n            var _a = this.props, className = _a.className, schema = _a.schema, children = _a.children, theme = _a.theme;\n            return (react_1.default.createElement(exports.formContext.Provider, { value: {\n                    renderAtom: this.renderAtom,\n                    renderBlockById: this.renderBlockById,\n                    getValue: this.getRefPathValue,\n                    getContext: this.getContext,\n                    setValue: this.setValue,\n                    setTouch: this.setTouch,\n                } },\n                react_1.default.createElement(\"form\", { className: classnames_1.default(className, theme, \"fjv-form\"), onSubmit: function (e) {\n                        e.preventDefault();\n                        _this.touchAll();\n                        var value = _this.getValue();\n                        _this.validate(value, function () {\n                            var _a, _b;\n                            (_b = (_a = _this.props).onSubmit) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                                value: value,\n                                isValid: _this.state.isValid,\n                            });\n                        });\n                    } },\n                    this.props.prepend,\n                    children ? null : this.renderFlow(schema, []),\n                    this.props.append)));\n        };\n        return class_1;\n    }(react_1.default.Component));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../flowjv-react/dist/bindings/form/index.js\n");

/***/ })

})